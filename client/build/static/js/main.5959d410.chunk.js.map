{"version":3,"sources":["components/layout/Navbar.js","components/layout/Landing.js","components/auth/Login.js","actions/alert.js","actions/types.js","components/auth/Register.js","actions/auth.js","components/layout/Alert.js","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","react_router_dom","to","Landing","Login","react","class","action","type","placeholder","name","required","value","setAlert","msg","alertType","timeout","arguments","length","undefined","dispatch","id","uuid","v4","payload","setTimeout","connect","register","_ref","email","password","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","config","body","res","wrap","_context","prev","next","console","log","headers","Access-Control-Allow-Origin","Content-Type","JSON","stringify","axios","post","sent","data","t0","response","t1","status","abrupt","stop","_x","apply","this","_useState","useState","password2","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","onSubmit","preventDefault","minLength","state","alerts","alert","map","key","concat","intialState","initialState","token","localStorage","getItem","isAuthenticated","loading","user","combineReducers","toConsumableArray","filter","auth","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","react_router","exact","path","component","layout_Alert","Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5959d410.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'; \n\nconst Navbar = (props) => {\n    return (\n        <nav className=\"navbar bg-dark\">\n        <h1>\n         <Link to='/' ><i className=\"fas fa-code\"></i> Se Jin Website</Link>\n        </h1>\n        <ul>\n          <li><Link to='/profile'>Developers</Link></li>\n          <li><Link to='/register'>Register</Link></li>\n          <li><Link to='/login'>Login</Link></li>\n        </ul>\n        </nav>\n    )\n};\nexport default Navbar","import React from 'react'\nimport {Link} from 'react-router-dom'; \nconst Landing = (props) => {\n    return(\n        <section className=\"landing\">\n      <div className=\"dark-overlay\">\n        <div className=\"landing-inner\">\n          <h1 className=\"x-large\">Developer Connector</h1>\n          <p className=\"lead\">\n            Create a developer profile/portfolio, share posts and get help from\n            other developers\n          </p>\n          <div className=\"buttons\">\n            <Link to='/register' className=\"btn btn-primary\">Sign Up </Link> \n            <Link to='/login' className=\"btn btn-light\">Login </Link> \n          </div>\n        </div>\n      </div>\n    </section>\n    )\n};\nexport default Landing","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nconst Login = (props) => {\n    return (\n        <Fragment>\n        <section class=\"container\">\n      <div class=\"alert alert-danger\">\n        Invalid credentials\n      </div>\n      <h1 class=\"large text-primary\">Sign In</h1>\n      <p class=\"lead\"><i class=\"fas fa-user\"></i> Sign into Your Account</p>\n      <form class=\"form\" action=\"dashboard.html\">\n        <div class=\"form-group\">\n          <input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            name=\"email\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n          />\n        </div>\n        <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\" />\n      </form>\n      <p class=\"my-1\">\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </section>\n    </Fragment>\n    );\n};\nexport default Login","import { SET_ALERT, REMOVE_ALERT } from './types';\nimport uuid from 'uuid'; \n\nexport const setAlert = (msg, alertType, timeout = 5000 ) => dispatch => {\n    const id = uuid.v4();\n    dispatch({\n        type:SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({\n        type : REMOVE_ALERT,\n        payload: id \n    }), timeout);\n\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';","import React , { Fragment, useState} from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {setAlert} from '../../actions/alert'; \nimport {register} from '../../actions/auth'; \nimport PropTypes from 'prop-types'; \n\nconst Register = ({ setAlert, register } ) => {\n    const [formData, setFormData] = useState({\n        name : '',\n        email : '',\n        password: '',\n        password2: ''\n    });\n\n    const {name,email,password,password2} = formData;  \n    \n    const onChange = e => setFormData({ ...formData, [e.target.name] : e.target.value});\n    const onSubmit = async e => {\n        e.preventDefault();\n        if(password !== password2){\n           setAlert('Password do not match', 'danger');\n        }else {\n            console.log('i am activated');\n            register({name,email,password});\n        }\n    };\n    return (\n    <Fragment> \n    <section className=\"container\">\n    <h1 className=\"large text-primary\">Sign Up</h1>\n    <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n    <form className=\"form\" onSubmit={e => onSubmit(e)}>\n      <div className=\"form-group\">\n        <input type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={e=> onChange(e)} required />\n      </div>\n      <div className=\"form-group\">\n        <input type=\"email\" placeholder=\"Email Address\" name=\"email\"  value={email} onChange={e=> onChange(e)} />\n        <small className=\"form-text\"\n          >This site uses Gravatar so if you want a profile image, use a\n          Gravatar email</small\n        >\n      </div>\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          minLength=\"6\"\n          value={password} onChange={e=> onChange(e)}\n        />\n      </div>\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          name=\"password2\"\n          minLength=\"6\"\n          value={password2} onChange={e=> onChange(e)}\n        />\n      </div>\n      <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n    </form>\n    <p className=\"my-1\">\n      Already have an account? <Link to='/login'>Sign In</Link>\n    </p>\n  </section>\n  </Fragment>   \n  );\n};\n\nRegister.propTypes = {\n    setAlert : PropTypes.func.isRequired,\n    register : PropTypes.func.isRequired\n};\n\nexport default connect(null, {setAlert, register} )(Register); ","import axios from 'axios'; \nimport {setAlert} from './alert';  \nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from './types'; \n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n    console.log(\"trying to register.. \");\n    const config = {\n        headers : {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type' : 'application/json'\n        }\n    }\n    const body = JSON.stringify({name,email,password}); \n    try{\n        const res = await axios.post('/api/users', body, config);\n        console.log(res);\n        dispatch({ \n            type : REGISTER_SUCCESS,\n            payload : res.data \n        }); \n        console.log(\"success\");\n    }catch(err){\n        var errors = null; \n        if(err.response){\n            switch(err.response.status){\n            case 404: dispatch(setAlert(\"Server Error\", 'danger')); break;\n            default : dispatch(setAlert(\"Internal Error\", 'danger'));\n        } \n    }\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'; \n\nconst Alert = ({alerts}) => \nalerts !== null &&\nalerts.length > 0 &&\nalerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n        { alert.msg }\n    </div>\n));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired \n}\n\nconst mapStateToProps = state => ({\n    alerts : state.alert \n});\nexport default connect(mapStateToProps)(Alert); \n","import { SET_ALERT , REMOVE_ALERT } from '../actions/types'; \n\nconst intialState = [\n]\n\nexport default function(state = intialState, action){\n    const { type , payload } = action; \n    switch(type){\n        case SET_ALERT :  \n            return [ ...state , payload];  // return current state with the payload \n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);  // filter out the alert with id \n        default : \n            return state;\n    }\n}","import {REGISTER_SUCCESS, REGISTER_FAIL} from '../actions/types'; \n\nconst initialState = {\n    token : localStorage.getItem('token'),\n    isAuthenticated : null,\n    loading : true,\n    user : null \n}\n\nexport default function(state = initialState, action){\n    const { type, payload } = action; \n    switch(type){\n        case REGISTER_SUCCESS: \n        localStorage.setItem('token', payload.token); \n        return {\n            ... state,\n            ... payload,\n            isAuthenticated : true,\n            loading : false \n        }\n        case REGISTER_FAIL :\n        localStorage.removeItem('token'); \n        return {\n            ... state,\n            token : null, \n            isAuthenticated : false,\n            loading : false \n        }\n        default :\n            return state \n    }\n}\n\n","import {combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nexport default combineReducers({\n    alert,\n    auth\n});\n","import { createStore , applyMiddleware } from 'redux'; \nimport { composeWithDevTools } from 'redux-devtools-extension'; \nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'; \n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware\n(...middleware)));\n\nexport default store; ","import React, { Fragment} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; \nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport Alert from './components/layout/Alert'; \n\nimport './App.css';\n\n// Redux\nimport { Provider } from 'react-redux'; \nimport store from './store'; \n\nconst App = () => (\n <Provider store={store}>\n <Router>\n <Fragment>\n   <Navbar/>\n   <Route exact path = \"/\" component = { Landing } /> \n   <section className=\"container\">\n   <Alert />\n   <Switch>\n     <Route exact path = \"/register\" component = {Register} /> \n       <Route exact path = \"/login\" component = {Login} /> \n     </Switch>\n   </section>\n  </Fragment> \n  </Router>\n  </Provider> \n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}